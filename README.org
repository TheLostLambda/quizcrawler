/Quizcrawler/

* What is it?
Quizcrawler is an application that, when fed a file of class-notes, crawls the
structure and generates interactive quizzes that can be used as review. It
leverages spaced repetition and forced / active recall to enhance learning. The
gamification of studying should further increase engagement and recall.
* API / Implementation Notes
  - The /Quizcrawler/ application with be a composite of several, independently
    functioning modules. Additionally, where possible, config files should be
    used in the place of hard-coded values.
** Occupied Directories
  - =$XDG_DATA_HOME/qc= or =$HOME/.local/share/qc= :: Data files
  - =$XDG_CONFIG_HOME/qc= or =$HOME/.config/qc= :: Configuration files
  - =$XDG_CACHE_HOME/qc= or =$HOME/.cache/qc= :: Temporary and cache files
** Functional Modules
*** Note Parser
  - This loads a file from disk and generates an intermediate, common
    representation for use in the downstream modules.
  - Different versions of this module could exist for the purpose of reading
    different file types. There would be a version for Org, ODT, LaTeX etc.
  - This module relies on a pattern file of regular expressions that dictate
    which patterns in the source become what in the output. This pattern file
    will likely be in the TOML format.
*** Quiz Core
  - This takes the common representation and generates quiz questions based on
    that data.
  - This module also introduces the concept of players. Each player has their
    own data file (which stores a history of quiz questions attempted, which
    were correct, and when those questions were last answered).
  - Also stores a list of high-score and the users that achieved them.
** Data Flow
  1) Data 
* Unsorted Ideas
  - Have a point system and an arcade-style leaderboard.
  - Build the quiz generation part of the application so that it is independent
    of the front-end and note format.
  - Take some form of regex rules file for parsing notes.
  - Because front-ends are switchable (there is a stable, intermediate data
    structure) I should be able to add a web interface as well as a CLI.
  - Quizzes have defined random seeds, so that the seed can be shared an a test
    duplicated.
  - Here is a good website for learning regex: https://regexone.com/
